{
  "file_name": "swc-107-simple-dao.sol",
  "tool_name": "slither, mythril",
  "duration": 36.438408613204956,
  "analysis": {
    "errors": [],
    "issues": [
      {
        "contract": "SimpleDAO",
        "source_map": "469:40:0",
        "line_no": [
          17
        ],
        "code": "Kh\u00f4ng c\u00f3 source code :(, FE t\u1ef1 \u0111i\u1ec1n \u1ee9ng v\u1edbi sourcemap nh\u00e9",
        "description": "Reentrancy in SimpleDAO.withdraw(uint256) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#15-20):\n\tExternal calls:\n\t- require(bool)(msg.sender.call.value(amount)()) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#17)\n\tState variables written after the call(s):\n\t- credit[msg.sender] -= amount (../../../tmp/user1/contracts/swc-107-simple-dao.sol#18)\n\tSimpleDAO.credit (../../../tmp/user1/contracts/swc-107-simple-dao.sol#9) can be used in cross function reentrancies:\n\t- SimpleDAO.credit (../../../tmp/user1/contracts/swc-107-simple-dao.sol#9)\n\t- SimpleDAO.queryCredit(address) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#22-24)\n\t- SimpleDAO.withdraw(uint256) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#15-20)\n",
        "hint": "reentrancy-vulnerabilities",
        "issue_title": "reentrancy-eth",
        "swcID": "SWC-107",
        "swc_title": "Reentrancy",
        "swc_link": "https://swcregistry.io/docs/SWC-107/",
        "severity": "High"
      },
      {
        "contract": "",
        "source_map": "175:23:0",
        "line_no": [
          6
        ],
        "code": "Kh\u00f4ng c\u00f3 source code :(, FE t\u1ef1 \u0111i\u1ec1n \u1ee9ng v\u1edbi sourcemap nh\u00e9",
        "description": "Pragma version0.4.24 (../../../tmp/user1/contracts/swc-107-simple-dao.sol#6) allows old versions\n",
        "hint": "incorrect-versions-of-solidity",
        "issue_title": "solc-version",
        "swcID": "SWC-102",
        "swc_title": "Outdated Compiler Version",
        "swc_link": "https://swcregistry.io/docs/SWC-102/",
        "severity": "Informational"
      },
      {
        "contract": "",
        "source_map": "",
        "line_no": [],
        "code": "Kh\u00f4ng c\u00f3 source code :(, FE t\u1ef1 \u0111i\u1ec1n \u1ee9ng v\u1edbi sourcemap nh\u00e9",
        "description": "solc-0.4.24 is not recommended for deployment\n",
        "hint": "incorrect-versions-of-solidity",
        "issue_title": "solc-version",
        "swcID": "SWC-102",
        "swc_title": "Outdated Compiler Version",
        "swc_link": "https://swcregistry.io/docs/SWC-102/",
        "severity": "Informational"
      },
      {
        "contract": "SimpleDAO",
        "source_map": "469:40:0",
        "line_no": [
          17
        ],
        "code": "Kh\u00f4ng c\u00f3 source code :(, FE t\u1ef1 \u0111i\u1ec1n \u1ee9ng v\u1edbi sourcemap nh\u00e9",
        "description": "Low level call in SimpleDAO.withdraw(uint256) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#15-20):\n\t- require(bool)(msg.sender.call.value(amount)()) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#17)\n",
        "hint": "low-level-calls",
        "issue_title": "low-level-calls",
        "swcID": "N/A",
        "swc_title": "N/A",
        "swc_link": "N/A",
        "severity": "Informational"
      },
      {
        "contract": "SimpleDAO",
        "source_map": "477:31",
        "line_no": 17,
        "code": "msg.sender.call.value(amount)()",
        "description": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.",
        "hint": "ch\u01b0a l\u00e0m ph\u1ea7n hint",
        "issue_title": "External Call To User-Supplied Address",
        "swcID": "SWC-107",
        "swc_title": "Reentrancy",
        "swc_link": "https://swcregistry.io/docs/SWC-107/",
        "severity": "Low"
      },
      {
        "contract": "SimpleDAO",
        "source_map": ":28",
        "line_no": 18,
        "code": "credit[msg.sender] -= amount",
        "description": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.",
        "hint": "ch\u01b0a l\u00e0m ph\u1ea7n hint",
        "issue_title": "State access after external call",
        "swcID": "SWC-107",
        "swc_title": "Reentrancy",
        "swc_link": "https://swcregistry.io/docs/SWC-107/",
        "severity": "Medium"
      },
      {
        "contract": "SimpleDAO",
        "source_map": ":28",
        "line_no": 18,
        "code": "credit[msg.sender] -= amount",
        "description": "Write to persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.",
        "hint": "ch\u01b0a l\u00e0m ph\u1ea7n hint",
        "issue_title": "State access after external call",
        "swcID": "SWC-107",
        "swc_title": "Reentrancy",
        "swc_link": "https://swcregistry.io/docs/SWC-107/",
        "severity": "Medium"
      }
    ]
  }
}