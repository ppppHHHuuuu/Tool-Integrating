[
  {
    "contract": "FunctionTypes",
    "source_map": "653:68:0",
    "line_no": [
      26,
      27
    ],
    "code": "Kh\u00f4ng c\u00f3 source code :(, FE t\u1ef1 \u0111i\u1ec1n \u1ee9ng v\u1edbi sourcemap nh\u00e9",
    "description": "FunctionTypes.breakIt() (../../../tmp/user1/contracts/swc-127.sol#22-28) uses assembly\n
                    \t- INLINE ASM (../../../tmp/user1/contracts/swc-127.sol#26-27)\n",
    "hint": "assembly-usage",
    "issue_title": "assembly",
    "swcID": "SWC-127",
    "swc_title": "Arbitrary Jump with Function Type Variable",
    "swc_link": "https://swcregistry.io/docs/SWC-127/",
    "severity": "Informational"
  },
  {
    "contract": "FunctionTypes",
    "source_map": ":::i",
    "line_no": 27,
    "code": "func.f()",
    "description": "The caller can redirect execution to arbitrary bytecode locations.\nIt is possible to redirect the control flow to arbitrary locations in the code. This may allow an attacker to bypass security controls or manipulate the business logic of the smart contract. Avoid using low-level-operations and assembly to prevent this issue.",
    "hint": "ch\u01b0a l\u00e0m ph\u1ea7n hint",
    "issue_title": "Jump to an arbitrary instruction",
    "swcID": "SWC-127",
    "swc_title": "Arbitrary Jump with Function Type Variable",
    "swc_link": "https://swcregistry.io/docs/SWC-127/",
    "severity": "High"
  }
]