[
  {
    "contract": "SimpleDAO",
    "source_map": "469:40:0",
    "line_no": [
      17
    ],
    "code": "Kh\u00f4ng c\u00f3 source code :(, FE t\u1ef1 \u0111i\u1ec1n \u1ee9ng v\u1edbi sourcemap nh\u00e9",
    "description": "Reentrancy in SimpleDAO.withdraw(uint256) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#15-20):\n\tExternal calls:\n\t- require(bool)(msg.sender.call.value(amount)()) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#17)\n\tState variables written after the call(s):\n\t- credit[msg.sender] -= amount (../../../tmp/user1/contracts/swc-107-simple-dao.sol#18)\n\tSimpleDAO.credit (../../../tmp/user1/contracts/swc-107-simple-dao.sol#9) can be used in cross function reentrancies:\n\t- SimpleDAO.credit (../../../tmp/user1/contracts/swc-107-simple-dao.sol#9)\n\t- SimpleDAO.queryCredit(address) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#22-24)\n\t- SimpleDAO.withdraw(uint256) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#15-20)\n",
    "hint": "reentrancy-vulnerabilities",
    "issue_title": "reentrancy-eth",
    "swcID": "SWC-107",
    "swc_title": "Reentrancy",
    "swc_link": "https://swcregistry.io/docs/SWC-107/",
    "severity": "High"
  },
  {
    "contract": "SimpleDAO",
    "source_map": "477:31",
    "line_no": 17,
    "code": "msg.sender.call.value(amount)()",
    "description": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.",
    "hint": "ch\u01b0a l\u00e0m ph\u1ea7n hint",
    "issue_title": "External Call To User-Supplied Address",
    "swcID": "SWC-107",
    "swc_title": "Reentrancy",
    "swc_link": "https://swcregistry.io/docs/SWC-107/",
    "severity": "Low"
  },
  {
    "contract": "SimpleDAO",
    "source_map": "477:31",
    "line_no": 17,
    "code": "msg.sender.call.value(amount)()",
    "description": "Reentrancy in SimpleDAO.withdraw(uint256) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#15-20):\n\tExternal calls:\n\t- require(bool)(msg.sender.call.value(amount)()) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#17)\n\tState variables written after the call(s):\n\t- credit[msg.sender] -= amount (../../../tmp/user1/contracts/swc-107-simple-dao.sol#18)\n\tSimpleDAO.credit (../../../tmp/user1/contracts/swc-107-simple-dao.sol#9) can be used in cross function reentrancies:\n\t- SimpleDAO.credit (../../../tmp/user1/contracts/swc-107-simple-dao.sol#9)\n\t- SimpleDAO.queryCredit(address) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#22-24)\n\t- SimpleDAO.withdraw(uint256) (../../../tmp/user1/contracts/swc-107-simple-dao.sol#15-20)\n\nA call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.",
    "hint": "reentrancy-vulnerabilities",
    "issue_title": "reentrancy-eth",
    "swcID": "SWC-107",
    "swc_title": "Reentrancy",
    "swc_link": "https://swcregistry.io/docs/SWC-107/",
    "severity": "chua lam"
  }
]